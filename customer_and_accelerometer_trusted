import sys
from awsglue.transforms import *
from awsglue.utils import getResolvedOptions
from pyspark.context import SparkContext
from awsglue.context import GlueContext
from awsglue.job import Job
from awsglue import DynamicFrame

def sparkSqlQuery(glueContext, query, mapping, transformation_ctx) -> DynamicFrame:
    for alias, frame in mapping.items():
        frame.toDF().createOrReplaceTempView(alias)
    result = spark.sql(query)
    return DynamicFrame.fromDF(result, glueContext, transformation_ctx)
args = getResolvedOptions(sys.argv, ['JOB_NAME'])
sc = SparkContext()
glueContext = GlueContext(sc)
spark = glueContext.spark_session
job = Job(glueContext)
job.init(args['JOB_NAME'], args)

# Script generated for node Customer Landing
CustomerLanding_node1711572744580 = glueContext.create_dynamic_frame.from_catalog(database="stedi-step-trainer", table_name="customer_landing", transformation_ctx="CustomerLanding_node1711572744580")

# Script generated for node Accelerometer Trusted
AccelerometerTrusted_node1711574589552 = glueContext.create_dynamic_frame.from_catalog(database="stedi-step-trainer", table_name="accelerometer_landing", transformation_ctx="AccelerometerTrusted_node1711574589552")

# Script generated for node Customer Trusted
SqlQuery0 = '''
select * from myDataSource
where sharewithpublicasofdate IS NOT NULL;
'''
CustomerTrusted_node1711573170143 = sparkSqlQuery(glueContext, query = SqlQuery0, mapping = {"myDataSource":CustomerLanding_node1711572744580}, transformation_ctx = "CustomerTrusted_node1711573170143")

# Script generated for node Join
Join_node1711574615531 = Join.apply(frame1=CustomerTrusted_node1711573170143, frame2=AccelerometerTrusted_node1711574589552, keys1=["email"], keys2=["user"], transformation_ctx="Join_node1711574615531")

# Script generated for node Customer Trusted
CustomerTrusted_node1711575607338 = glueContext.getSink(path="s3://stedi-step-trainer-data/customer/trusted/", connection_type="s3", updateBehavior="UPDATE_IN_DATABASE", partitionKeys=[], enableUpdateCatalog=True, transformation_ctx="CustomerTrusted_node1711575607338")
CustomerTrusted_node1711575607338.setCatalogInfo(catalogDatabase="stedi-step-trainer",catalogTableName="customer_trusted")
CustomerTrusted_node1711575607338.setFormat("json")
CustomerTrusted_node1711575607338.writeFrame(CustomerTrusted_node1711573170143)
# Script generated for node Accelerometer Trusted
AccelerometerTrusted_node1711574756625 = glueContext.getSink(path="s3://stedi-step-trainer-data/accelerometer/trusted/", connection_type="s3", updateBehavior="UPDATE_IN_DATABASE", partitionKeys=[], enableUpdateCatalog=True, transformation_ctx="AccelerometerTrusted_node1711574756625")
AccelerometerTrusted_node1711574756625.setCatalogInfo(catalogDatabase="stedi-step-trainer",catalogTableName="accelerometer_trusted")
AccelerometerTrusted_node1711574756625.setFormat("json")
AccelerometerTrusted_node1711574756625.writeFrame(Join_node1711574615531)
job.commit()
